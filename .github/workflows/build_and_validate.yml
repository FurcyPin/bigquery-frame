name: Build and Validate
on:
  push:

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  PROJECT_NAME: bigquery_frame
  POETRY_VERSION: "1.7.1"

jobs:
  Build-and-Validate:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Poetry lock
        run: poetry lock

      - name: Set up poetry cache
        uses: actions/setup-python@v4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
          cache: 'poetry'

      - name: Install project
        run: poetry install

      - name: Linter black
        run: poetry run black --diff --check .
      - name: Linter isort
        run: poetry run isort --check-only tests ${{ env.PROJECT_NAME }}
      - name: Linter flake8
        run: poetry run flake8 tests ${{ env.PROJECT_NAME }}
      - name: Linter mypy
        run: poetry run mypy ${{ env.PROJECT_NAME }}
        # We run mypy but ignore the results as there are too many things to fix for now.
        continue-on-error: true
      - name: Security bandit
        run: poetry run bandit .
      - name: Security safety
        run: poetry run safety check

      - name: Run Unit Tests
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: poetry run pytest --cov --cov-report=xml -n 6

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
